// <auto-generated />
using System;
using EF_CodeFirst.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_CodeFirst.Migrations
{
    [DbContext(typeof(StudentContext))]
    partial class StudentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EF_CodeFirst.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"), 1L, 1);

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("GradeId");

                    b.HasIndex("StudentID");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 258,
                            GradeName = "1. razred",
                            Section = "B",
                            StudentID = 153
                        },
                        new
                        {
                            GradeId = 358,
                            GradeName = "2. razred",
                            Section = "G",
                            StudentID = 146
                        },
                        new
                        {
                            GradeId = 458,
                            GradeName = "3. razred",
                            Section = "C",
                            StudentID = 134
                        },
                        new
                        {
                            GradeId = 558,
                            GradeName = "4. razred",
                            Section = "F",
                            StudentID = 112
                        },
                        new
                        {
                            GradeId = 658,
                            GradeName = "5. razred",
                            Section = "D",
                            StudentID = 90
                        },
                        new
                        {
                            GradeId = 758,
                            GradeName = "6. razred",
                            Section = "B",
                            StudentID = 84
                        },
                        new
                        {
                            GradeId = 858,
                            GradeName = "7. razred",
                            Section = "G",
                            StudentID = 78
                        });
                });

            modelBuilder.Entity("EF_CodeFirst.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("StudentID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 78,
                            DateOfBirth = new DateTime(1995, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 187.58m,
                            StudentName = "Marko Marić",
                            Weight = 83f
                        },
                        new
                        {
                            StudentID = 84,
                            DateOfBirth = new DateTime(1996, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 172.64m,
                            StudentName = "Iva Ivić",
                            Weight = 75f
                        },
                        new
                        {
                            StudentID = 90,
                            DateOfBirth = new DateTime(1997, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 179.43m,
                            StudentName = "Pero Perić",
                            Weight = 86f
                        },
                        new
                        {
                            StudentID = 112,
                            DateOfBirth = new DateTime(1998, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 168.8m,
                            StudentName = "Ivana Perić",
                            Weight = 52f
                        },
                        new
                        {
                            StudentID = 134,
                            DateOfBirth = new DateTime(1998, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 170.56m,
                            StudentName = "Lovro Lovrić",
                            Weight = 64f
                        },
                        new
                        {
                            StudentID = 146,
                            DateOfBirth = new DateTime(1999, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 165.86m,
                            StudentName = "Ana Anić",
                            Weight = 62f
                        },
                        new
                        {
                            StudentID = 153,
                            DateOfBirth = new DateTime(2000, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 169.78m,
                            StudentName = "Ivan Ivanić",
                            Weight = 60f
                        });
                });

            modelBuilder.Entity("EF_CodeFirst.Models.Grade", b =>
                {
                    b.HasOne("EF_CodeFirst.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
